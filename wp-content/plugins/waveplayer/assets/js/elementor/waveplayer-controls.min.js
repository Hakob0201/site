class ColorPicker extends elementorModules.Module{constructor(...e){super(...e),this.createPicker()}getColorPickerPalette(){return _.pluck(elementor.schemes.getScheme("color-picker").items,"value")}getDefaultSettings(){return{picker:{theme:"monolith",position:"bottom-"+(elementorCommon.config.isRTL?"end":"start"),components:{opacity:!0,hue:!0,interaction:{input:!0,clear:!0}},strings:{clear:elementor.translate("clear")}},classes:{active:"elementor-active",swatchTool:"elementor-color-picker__swatch-tool",swatchPlaceholder:"elementor-color-picker__swatch-placeholder",addSwatch:"elementor-color-picker__add-swatch",droppingArea:"elementor-color-picker__dropping-area",plusIcon:"eicon-plus",trashIcon:"eicon-trash-o",dragToDelete:"elementor-color-picker__dropping-area__drag-to-delete"},selectors:{swatch:".pcr-swatch"}}}createPicker(){const e=this.getSettings("picker");e.default=e.default||null,this.picker=new Pickr(e),e.default||this.picker.setColor("#020101"),this.color=this.processColor(),this.picker.on("change",()=>this.onPickerChange()).on("clear",()=>this.onPickerClear()).on("show",()=>this.onPickerShow()),this.addPlusButton(),this.addSwatchDroppingArea(),this.addToolsToSwatches()}processColor(){const e=this.picker.getColor();let t;return(t=1===e.a?e.toHEXA():e.toRGBA()).toString(0)}getColor(){return this.color}getSwatches(){return jQuery(this.picker.getRoot().swatches)}addSwatch(e){this.picker.addSwatch(e)}addSwatches(){const e=this.getSettings();this.getSwatches().children(e.selectors.swatch).remove(),this.picker._swatchColors=[],this.getColorPickerPalette().forEach(e=>this.addSwatch(e)),this.getSwatches().sortable({items:".pcr-swatch",placeholder:e.classes.swatchPlaceholder,connectWith:this.$droppingArea,delay:200,start:(...e)=>this.onSwatchesSortStart(...e),stop:()=>this.onSwatchesSortStop(),update:(...e)=>this.onSwatchesSortUpdate(...e)}),this.addToolsToSwatches()}addPlusButton(){const{classes:e}=this.getSettings();this.$addButton=jQuery("<button>",{class:e.swatchTool+" "+e.addSwatch}).html(jQuery("<i>",{class:e.plusIcon})),this.$addButton.on("click",()=>this.onAddButtonClick()),this.$addButton.tipsy({title:()=>elementor.translate("add_picked_color"),gravity:()=>"s"})}addSwatchDroppingArea(){const{classes:e}=this.getSettings();if(this.$droppingArea=jQuery("<div>",{class:e.droppingArea}).html(jQuery("<i>",{class:e.trashIcon})),this.getSwatches().after(this.$droppingArea),this.$droppingArea.sortable({cancel:".eicon-trash-o",placeholder:e.swatchPlaceholder,over:()=>this.onDroppingAreaOver(),out:()=>this.onDroppingAreaOut()}),!this.introductionViewed()){const t=jQuery("<div>",{class:e.dragToDelete}).text(elementor.translate("drag_to_delete"));this.$droppingArea.append(t).slideDown(),elementorCommon.ajax.addRequest("introduction_viewed",{data:{introductionKey:"colorPickerDropping"}}),ColorPicker.droppingIntroductionViewed=!0}}addToolsToSwatches(){this.getSwatches().append(this.$addButton),this.picker.activateSwatch()}destroy(){this.picker.destroyAndRemove()}fixTipsyForFF(e){e.data("tipsy").hide()}introductionViewed(){return ColorPicker.droppingIntroductionViewed||elementor.config.user.introduction.colorPickerDropping}onPickerChange(){this.picker.applyColor();const e=this.processColor();if(e===this.color)return;this.color=e;const t=this.getSettings("onChange");t&&t()}onPickerClear(){this.color="";const e=this.getSettings("onClear");e&&e()}onPickerShow(){this.addSwatches();const{result:e}=this.picker.getRoot().interaction;setTimeout(()=>{e.select(),this.picker._recalc=!0},100)}onAddButtonClick(){this.addSwatch(this.color),this.addToolsToSwatches(),elementor.schemes.addSchemeItem("color-picker",{value:this.color}),elementor.schemes.saveScheme("color-picker"),this.fixTipsyForFF(this.$addButton)}onDroppingAreaOver(){this.$droppingArea.addClass(this.getSettings("classes.active"))}onDroppingAreaOut(){this.$droppingArea.removeClass(this.getSettings("classes.active"))}onSwatchesSortStart(e){this.sortedSwatchIndex=jQuery(e.srcElement).index(),this.$droppingArea.slideDown(()=>this.$droppingArea.sortable("refresh"))}onSwatchesSortStop(){this.$droppingArea.slideUp()}onSwatchesSortUpdate(e){const t=elementor.schemes.getSchemeValue("color-picker",this.sortedSwatchIndex+1);elementor.schemes.removeSchemeItem("color-picker",this.sortedSwatchIndex);const o=jQuery(e.srcElement);o.parent().is(this.$droppingArea)?(this.picker._swatchColors.splice(this.sortedSwatchIndex,1),o.remove()):elementor.schemes.addSchemeItem("color-picker",t,o.index()),elementor.schemes.saveScheme("color-picker")}}elementor.addControlView("ColorTuplet",elementor.modules.controls.BaseMultiple.extend({ui:function(){var e=elementor.modules.controls.BaseMultiple.prototype.ui.apply(this,arguments);return e.colorPickerPlaceholder=".elementor-color-picker-placeholder",e},initColors:function(){var e=this;this.colorPicker1=new ColorPicker({picker:{el:this.ui.colorPickerPlaceholder[0],default:this.getControlValue(this.model.get("name"))},onChange:function(){e.setValue(e.model.attributes.name,e.colorPicker1.getColor())},onClear:function(){e.setValue(e.model.attributes.name,"")}}),this.colorPicker2=new ColorPicker({picker:{el:this.ui.colorPickerPlaceholder[1],default:this.getControlValue(this.model.get("name")+"_2")},onChange:function(){e.setValue(`${e.model.attributes.name}_2`,e.colorPicker2.getColor())},onClear:function(){e.setValue(`${e.model.attributes.name}_2`,"")}})},onReady:function(){this.initColors()},onBeforeDestroy:function(){this.colorPicker1.destroy(),this.colorPicker2.destroy()}})),elementor.addControlView("Playlist",elementor.modules.controls.BaseData.extend({ui:function(){var e=elementor.modules.controls.BaseData.prototype.ui.apply(this,arguments);return e.addTracks=".elementor-control-playlist-add",e.clearPlaylist=".elementor-control-playlist-clear",e.playlistThumbnails=".elementor-control-playlist-thumbnails",e.status=".elementor-control-playlist-status-title",e},events:function(){return _.extend(elementor.modules.controls.BaseData.prototype.events.apply(this,arguments),{"click @ui.addTracks":"onAddTracksClick","click @ui.clearPlaylist":"onClearPlaylistClick","click @ui.playlistThumbnails":"onPlaylistThumbnailsClick"})},onReady:function(){this.initRemoveDialog()},applySavedValue:function(){var e=this.getControlValue(),t=e.length,o=!!t;if(this.$el.toggleClass("elementor-playlist-has-tracks",o).toggleClass("elementor-playlist-empty",!o),this.ui.status.text(elementor.translate(o?"playlist_tracks_selected":"playlist_no_tracks_selected",[t])),this.ui.playlistThumbnails.empty(),o){var i=wp.media.query({orderby:"post__in",order:"ASC",type:"audio",perPage:-1,post__in:_.pluck(e,"id")});i.more().done(()=>{this.buildThumbnails(i)})}},buildThumbnails:function(e){var t=this.ui.playlistThumbnails;this.getControlValue().forEach(function(o){var i=jQuery("<div>",{class:"elementor-control-playlist-thumbnail"});const r=Object.values(e.models).find(e=>e.id===o.id);r&&r.attributes&&r.attributes.thumb&&i.css("background-image","url("+r.attributes.thumb.src+")"),t.append(i)})},hasTracks:function(){return!!this.getControlValue().length},openFrame:function(e){this.initFrame(e),this.frame.open()},initFrame:function(e){var t={frame:"post",multiple:!0,state:{create:"playlist",add:"playlist-library",edit:"playlist-edit"}[e],button:{text:elementor.translate("insert_tracks")}};this.hasTracks()&&(t.selection=this.fetchSelection()),this.frame=wp.media(t),this.frame.on({update:this.select,"menu:render:default":this.menuRender,"content:render:browse":this.playlistSettings},this)},menuRender:function(e){e.unset("insert"),e.unset("featured-image")},playlistSettings:function(e){e.sidebar.on("ready",function(){e.sidebar.unset("playlist")})},fetchSelection:function(){var e=wp.media.query({orderby:"post__in",order:"ASC",type:"audio",perPage:-1,post__in:_.pluck(this.getControlValue(),"id")});return new wp.media.model.Selection(e.models,{props:e.props.toJSON(),multiple:!0})},select:function(e){var t=[];e.each(function(e){t.push({id:e.get("id"),url:e.get("url")})}),this.setValue(t),this.applySavedValue()},onBeforeDestroy:function(){this.frame&&this.frame.off(),this.$el.remove()},resetPlaylist:function(){this.setValue([]),this.applySavedValue()},initRemoveDialog:function(){var e;this.getRemoveDialog=function(){return e||(e=elementorCommon.dialogsManager.createWidget("confirm",{message:elementor.translate("dialog_confirm_playlist_delete"),headerMessage:elementor.translate("delete_playlist"),strings:{confirm:elementor.translate("delete"),cancel:elementor.translate("cancel")},defaultOption:"confirm",onConfirm:this.resetPlaylist.bind(this)})),e}},onAddTracksClick:function(){this.openFrame(this.hasTracks()?"add":"create")},onClearPlaylistClick:function(){this.getRemoveDialog().show()},onPlaylistThumbnailsClick:function(){this.openFrame("edit")}}));